apiVersion: apps/v1
kind: Deployment #The kind of object I'm creating
metadata:
  name: p1 #arbitrary but important name
spec:
  replicas: 3 #3 replica pods will be made for this deployment
  selector: #the selector and labels should match the ones in the service.yaml to create a pairing
    matchLabels:
      app: p1
  template:
    metadata:
      labels:
        app: p1
    spec:
      containers: #here's where we define info about the container that this deployment will spin up
        - name: p1 #this will be the name of the container
          image: 296271419447.dkr.ecr.us-east-1.amazonaws.com/p1-demo:latest #The image we want to base the container off of
          ports:
            - containerPort: 8080 #the container will run on port 8080 in the cluster
---
apiVersion: v1
kind: Service
metadata:
  name: api
spec:
  type: LoadBalancer #This time we'll provision a LoadBalancer (instead of NodePort). Better for production!
  selector:
    app: p1 # FOR EKS we change this app to be p1 so it knows what deployment to apply to our services
  ports:
    - port: 80 # FOR EKS change to port 80
      targetPort: 5000 #in accordance with the application.properties